namespace ca.mcgill.ecse223.tileo.controller;

class PlayController {
        State {
        
        Ready {
              startGame() / {
                doStartGame();
              } -> Roll;
          
            setState(State gameState) [isInGameState(selectedGame)] / {
                doSetState(gameState);
            } -> Roll;
             
          setState(State gameState) [isInGameWonState(selectedGame)] / {
              doSetState(gameState);
          } -> GameWon;
          
          setState(State gameState) [isNotInGameOrWonMode(selectedGame)] / {
               doSetState(gameState);
            } -> ActionCard;
        }
        
        Roll {
            rollDie() / {
            possibleMoves = doRollDie();
            } -> Move;
        }
        
        Move {
            land(Tile tile) [isNormalTile(tile)] / {
              doLandTile(tile);
            } -> Roll;
            land(Tile tile) [isWinTile(tile)] / {
              doLandTile(tile);
            } -> GameWon;
            land(Tile tile) [isActionTile(tile)] / {
              doLandTile(tile);
            } -> ActionCard;
        }
          
        ActionCard {
            playSendBackToStartActionCard(Player playerChosen) [isSendBackToStartActionCard()] / {
            doPlaySendBackToStartActionCard(Player playerChosen);
            } -> Roll;
            
            playRollDieActionCard() [isRollDieActionCard()] / {
            possibleMoves = doPlayRollDieActionCard();
            } -> Roll;
          
            playAddConnectionActionCard(Tile tile1, Tile tile2) [isConnectTilesActionCard()] / {
            doPlayAddConnectionActionCard(tile1, tile2);
            } -> Roll;
          
            playRemoveConnectionActionCard(Connection c)
            [isRemoveConnectionActionCard()] / {
            doPlayRemoveConnectionActionCard(tile1, tile2);
            } -> Roll;
          
            playTeleportActionCard(Tile tile) [isTeleportAndNormalTile(tile)] / {
            doPlayTeleportActionCard(tile);
            } -> Roll;
          
            playTeleportActionCard(Tile tile) [isTeleportAndWinTile(tile)] / {
            doPlayTeleportActionCard(tile);
            } -> GameWon;
          
            playTeleportActionCard(Tile tile) [isTeleportAndActionTile(tile)] / {
            doPlayTeleportActionCard(tile);
            } -> ActionCard;
          
            playLoseTurnActionCard()[isLoseTurnActionCard()] / {
            doPlayLoseTurnActionCard();
            } -> Roll;
          
        }
    } 
    
    1 -> * Tile possibleMoves;
    
    private void cloneGame() {
    TileO tileO = TileOApplication.getTileO();
    Game cloned = tileO.getCurrentGame().clone();
    tileO.addGame(cloned);
    tileO.setCurrentGame(cloned);
  }
}
